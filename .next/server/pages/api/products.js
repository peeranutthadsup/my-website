"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/products";
exports.ids = ["pages/api/products"];
exports.modules = {

/***/ "mysql2/promise":
/*!*********************************!*\
  !*** external "mysql2/promise" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("mysql2/promise");

/***/ }),

/***/ "(api)/./pages/api/products.js":
/*!*******************************!*\
  !*** ./pages/api/products.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mysql2/promise */ \"mysql2/promise\");\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mysql2_promise__WEBPACK_IMPORTED_MODULE_0__);\n\nasync function handler(req, res) {\n    const connection = await mysql2_promise__WEBPACK_IMPORTED_MODULE_0___default().createConnection({\n        host: \"localhost\",\n        user: \"root\",\n        password: \"\",\n        database: \"SellerShopee\"\n    });\n    try {\n        if (req.method === \"GET\") {\n            const { id } = req.query;\n            if (id) {\n                const [rows] = await connection.execute(`SELECT \r\n            p.product_id,\r\n            p.product_key,\r\n            p.product_name,\r\n            p.product_category_id,\r\n            pc.product_category_name,\r\n            p.color_id,\r\n            c.color_name,\r\n            p.qty,\r\n            p.stock,\r\n            p.purchase_price,\r\n            p.lot,\r\n            p.shipping_cost_piece,\r\n            p.total_cost_including_shipping,\r\n            p.sell_price_1,\r\n            p.sell_price_2,\r\n            p.sell_price_3,\r\n            p.product_status,\r\n            p.is_shopee,\r\n            p.is_lazada\r\n          FROM product p\r\n          LEFT JOIN color c ON c.color_id = p.color_id\r\n          LEFT JOIN product_category pc ON pc.product_category_id = p.product_category_id\r\n          WHERE p.product_id = ?`, [\n                    id\n                ]);\n                if (rows.length === 0) {\n                    res.status(404).json({\n                        message: \"Product not found\"\n                    });\n                    return;\n                }\n                res.status(200).json(rows[0]);\n            } else {\n                // Get all products\n                const [rows] = await connection.execute(`SELECT \r\n            p.product_id,\r\n            p.product_key,\r\n            p.product_name,\r\n            p.product_category_id,\r\n            pc.product_category_name,\r\n            p.color_id,\r\n            c.color_name,\r\n            p.qty,\r\n            p.stock,\r\n            p.purchase_price,\r\n            p.lot,\r\n            p.shipping_cost_piece,\r\n            p.total_cost_including_shipping,\r\n            p.sell_price_1,\r\n            p.sell_price_2,\r\n            p.sell_price_3,\r\n            p.product_status,\r\n            p.is_shopee,\r\n            p.is_lazada\r\n          FROM product p\r\n          LEFT JOIN color c ON c.color_id = p.color_id\r\n          LEFT JOIN product_category pc ON pc.product_category_id = p.product_category_id`);\n                res.status(200).json(rows);\n            }\n        } else if (req.method === \"POST\") {\n            const { product_key, product_name, product_category_id, color_id, qty, stock, purchase_price, lot, shipping_cost_piece, total_cost_including_shipping, sell_price_1, sell_price_2, sell_price_3, product_status, is_shopee, is_lazada } = req.body;\n            // Validate required fields here if needed\n            const [result] = await connection.execute(`INSERT INTO product \r\n          (product_key, product_name, product_category_id, color_id, qty, stock, purchase_price, lot, shipping_cost_piece, total_cost_including_shipping, sell_price_1, sell_price_2, sell_price_3, product_statusis_shopee,is_lazada)\r\n         VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?)`, [\n                product_key,\n                product_name,\n                product_category_id,\n                color_id,\n                qty,\n                stock,\n                purchase_price,\n                lot,\n                shipping_cost_piece,\n                total_cost_including_shipping,\n                sell_price_1,\n                sell_price_2,\n                sell_price_3,\n                product_status,\n                is_shopee,\n                is_lazada\n            ]);\n            res.status(201).json({\n                message: \"Product added\",\n                product_id: result.insertId\n            });\n        } else if (req.method === \"PUT\") {\n            let { id } = req.query;\n            console.log(\"PUT request id from query:\", id);\n            console.log(\"PUT request body:\", req.body);\n            if (!id) {\n                res.status(400).json({\n                    message: \"Product ID is required\"\n                });\n                return;\n            }\n            // Convert id to number (if possible)\n            id = Number(id);\n            if (isNaN(id)) {\n                res.status(400).json({\n                    message: \"Invalid Product ID\"\n                });\n                return;\n            }\n            const { product_key, product_name, product_category_id, color_id, qty, stock, purchase_price, lot, shipping_cost_piece, total_cost_including_shipping, sell_price_1, sell_price_2, sell_price_3, product_status, is_shopee, is_lazada } = req.body;\n            const [result] = await connection.execute(`UPDATE product SET\r\n          product_key = ?,\r\n          product_name = ?,\r\n          product_category_id = ?,\r\n          color_id = ?,\r\n          qty = ?,\r\n          stock = ?,\r\n          purchase_price = ?,\r\n          lot = ?,\r\n          shipping_cost_piece = ?,\r\n          total_cost_including_shipping = ?,\r\n          sell_price_1 = ?,\r\n          sell_price_2 = ?,\r\n          sell_price_3 = ?,\r\n          product_status = ?,\r\n          is_shopee = ?,\r\n          is_lazada = ?\r\n         WHERE product_id = ?`, [\n                product_key,\n                product_name,\n                product_category_id,\n                color_id,\n                qty,\n                stock,\n                purchase_price,\n                lot,\n                shipping_cost_piece,\n                total_cost_including_shipping,\n                sell_price_1,\n                sell_price_2,\n                sell_price_3,\n                product_status,\n                is_shopee,\n                is_lazada,\n                id\n            ]);\n            if (result.affectedRows === 0) {\n                res.status(404).json({\n                    message: \"Product not found\"\n                });\n            } else {\n                res.status(200).json({\n                    message: \"Product updated\"\n                });\n            }\n        } else if (req.method === \"DELETE\") {\n            let { id } = req.query;\n            if (!id) {\n                res.status(400).json({\n                    message: \"Product ID is required\"\n                });\n                return;\n            }\n            // Convert id to number\n            id = Number(id);\n            if (isNaN(id)) {\n                res.status(400).json({\n                    message: \"Invalid Product ID\"\n                });\n                return;\n            }\n            const [result] = await connection.execute(`DELETE FROM product WHERE product_id = ?`, [\n                id\n            ]);\n            if (result.affectedRows === 0) {\n                res.status(404).json({\n                    message: \"Product not found\"\n                });\n            } else {\n                res.status(200).json({\n                    message: \"Product deleted\"\n                });\n            }\n        } else {\n            res.setHeader(\"Allow\", [\n                \"GET\",\n                \"POST\",\n                \"PUT\",\n                \"DELETE\"\n            ]);\n            res.status(405).json({\n                message: `Method ${req.method} Not Allowed`\n            });\n        }\n    } catch (error) {\n        console.error(\"API Error:\", error);\n        res.status(500).json({\n            message: \"Internal Server Error\",\n            error: error.message\n        });\n    } finally{\n        await connection.end();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/products.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/products.js"));
module.exports = __webpack_exports__;

})();